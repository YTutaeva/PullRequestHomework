# Удаленные репозитории

## Команды для работы с удаленными репозиториями
1. **git clone**  загружает все изменения и сливает все ветки на локальном компьютере и в удаленном репозитории.
2. **git pull** позволяет скачать все из текущего репозитория и автоматически сделать merge с нашей версией.
3. **git push** позволяет отправить свою версию репозитория во внешний репозиторий. При первом её использовании нужна авторизация.
4. **cd название репозитория** - перемещение

## Как настроить совместную работу
1. Создать аккаунт на GitHub.com
2. Создать локальный репозиторий
3. “Подружить” ваш локальный и удалённый репозитории.
GitHub при создании нового репозитория подскажет, как это можно сделать
4. Отправить (*push*) ваш локальный репозиторий в удалённый (на GitHub), при этом, возможно, вам нужно будет авторизоваться на удалённом репозитории
5. Провести изменения “с другого компьютера”
6. Выкачать (*pull*) актуальное состояние из удалённого репозитория

## Подробно про Pull request
## Pull request
Команда для предложения изменений
Запрос на вливание изменений в репозиторий

1. Делаем *fork* интересующего нас репозитория
2. Делаем *git clone* для нашей версии этого репозитория
3. Мы создаем ветку с предлагаемыми изменениями
4. Производим все изменения только в этой ветке
5. Отправляем эти изменения на свой аккаунт (*push*)
6. В окне на Github появляется возможность отправить *pull request* с изменениями

## Полезные команды
1. pwd - чтобы настроить папку, в которой находишься
2. git pull origin master - если в удаленном репозитории что-то сделали, а ты смотришь в локальном
3. открыть во встроенном репозитории - если выдает ошибку в терминале когда не в том файле находишься